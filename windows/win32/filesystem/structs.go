// AUTOGENERATED - DO NOT EDIT
// Generated by go-windows.

// Package filesystem implements the Windows.Win32.FileSystem namespace.
package filesystem

type FindChangeNotifcationHandle struct {
	Value int
}

type FindFileHandle struct {
	Value int
}

type FindFileNameHandle struct {
	Value int
}

type FindStreamHandle struct {
	Value int
}

type FindVolumeHandle struct {
	Value int
}

type FindVolumeMointPointHandle struct {
	Value int
}

type FILE_ID_128 struct {
	Identifier int
}

type FILE_NOTIFY_INFORMATION struct {
	NextEntryOffset int
	Action          int
	FileNameLength  int
	FileName        int
}

type FILE_NOTIFY_EXTENDED_INFORMATION struct {
	NextEntryOffset      int
	Action               int
	CreationTime         int
	LastModificationTime int
	LastChangeTime       int
	LastAccessTime       int
	AllocatedLength      int
	FileSize             int
	FileAttributes       int
	ReparsePointTag      int
	FileId               int
	ParentFileId         int
	FileNameLength       int
	FileName             int
}

type REPARSE_GUID_DATA_BUFFER struct {
	ReparseTag           int
	ReparseDataLength    int
	Reserved             int
	ReparseGuid          int
	GenericReparseBuffer int
}

type TRANSACTION_NOTIFICATION struct {
	TransactionKey          int
	TransactionNotification int
	TmVirtualClock          int
	ArgumentLength          int
}

type TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT struct {
	EnlistmentId int
	UOW          int
}

type TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT struct {
	TmIdentity int
	Flags      int
}

type TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT struct {
	SavepointId int
}

type TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT struct {
	PropagationCookie int
	UOW               int
	TmIdentity        int
	BufferLength      int
}

type TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT struct {
	MarshalCookie int
	UOW           int
}

type KCRM_MARSHAL_HEADER struct {
	VersionMajor int
	VersionMinor int
	NumProtocols int
	Unused       int
}

type KCRM_TRANSACTION_BLOB struct {
	UOW            int
	TmIdentity     int
	IsolationLevel int
	IsolationFlags int
	Timeout        int
	Description    int
}

type KCRM_PROTOCOL_BLOB struct {
	ProtocolId              int
	StaticInfoLength        int
	TransactionIdInfoLength int
	Unused1                 int
	Unused2                 int
}

type DISK_SPACE_INFORMATION struct {
	ActualTotalAllocationUnits           int
	ActualAvailableAllocationUnits       int
	ActualPoolUnavailableAllocationUnits int
	CallerTotalAllocationUnits           int
	CallerAvailableAllocationUnits       int
	CallerPoolUnavailableAllocationUnits int
	UsedAllocationUnits                  int
	TotalReservedAllocationUnits         int
	VolumeStorageReserveAllocationUnits  int
	AvailableCommittedAllocationUnits    int
	PoolAvailableAllocationUnits         int
	SectorsPerAllocationUnit             int
	BytesPerSector                       int
}

type WIN32_FILE_ATTRIBUTE_DATA struct {
	DWFILEATTRIBUTES int
	FTCREATIONTIME   int
	FTLASTACCESSTIME int
	FTLASTWRITETIME  int
	NFILESIZEHIGH    int
	NFILESIZELOW     int
}

type BY_HANDLE_FILE_INFORMATION struct {
	DWFILEATTRIBUTES     int
	FTCREATIONTIME       int
	FTLASTACCESSTIME     int
	FTLASTWRITETIME      int
	DWVOLUMESERIALNUMBER int
	NFILESIZEHIGH        int
	NFILESIZELOW         int
	NNUMBEROFLINKS       int
	NFILEINDEXHIGH       int
	NFILEINDEXLOW        int
}

type CREATEFILE2_EXTENDED_PARAMETERS struct {
	DWSIZE               int
	DWFILEATTRIBUTES     int
	DWFILEFLAGS          int
	DWSECURITYQOSFLAGS   int
	LPSECURITYATTRIBUTES int
	HTEMPLATEFILE        int
}

type WIN32_FIND_STREAM_DATA struct {
	StreamSize  int
	CSTREAMNAME int
}

type EFS_CERTIFICATE_BLOB struct {
	DWCERTENCODINGTYPE int
	CBDATA             int
	PBDATA             int
}

type EFS_HASH_BLOB struct {
	CBDATA int
	PBDATA int
}

type EFS_RPC_BLOB struct {
	CBDATA int
	PBDATA int
}

type EFS_PIN_BLOB struct {
	CBPADDING int
	CBDATA    int
	PBDATA    int
}

type EFS_KEY_INFO struct {
	DWVERSION int
	Entropy   int
	Algorithm int
	KeyLength int
}

type EFS_COMPATIBILITY_INFO struct {
	EfsVersion int
}

type EFS_VERSION_INFO struct {
	EfsVersion int
	SubVersion int
}

type EFS_DECRYPTION_STATUS_INFO struct {
	DWDECRYPTIONERROR int
	DWHASHOFFSET      int
	CBHASH            int
}

type EFS_ENCRYPTION_STATUS_INFO struct {
	BHASCURRENTKEY    int
	DWENCRYPTIONERROR int
}

type ENCRYPTION_CERTIFICATE struct {
	CBTOTALLENGTH int
	PUSERSID      int
	PCERTBLOB     int
}

type ENCRYPTION_CERTIFICATE_HASH struct {
	CBTOTALLENGTH        int
	PUSERSID             int
	PHASH                int
	LPDISPLAYINFORMATION int
}

type ENCRYPTION_CERTIFICATE_HASH_LIST struct {
	NCERT_HASH int
	PUSERS     int
}

type ENCRYPTION_CERTIFICATE_LIST struct {
	NUSERS int
	PUSERS int
}

type ENCRYPTED_FILE_METADATA_SIGNATURE struct {
	DWEFSACCESSTYPE        int
	PCERTIFICATESADDED     int
	PENCRYPTIONCERTIFICATE int
	PEFSSTREAMSIGNATURE    int
}

type ENCRYPTION_PROTECTOR struct {
	CBTOTALLENGTH         int
	PUSERSID              int
	LPPROTECTORDESCRIPTOR int
}

type ENCRYPTION_PROTECTOR_LIST struct {
	NPROTECTORS int
	PPROTECTORS int
}

type NTMS_ASYNC_IO struct {
	OperationId     int
	EventId         int
	DWOPERATIONTYPE int
	DWRESULT        int
	DWASYNCSTATE    int
	HEVENT          int
	BONSTATECHANGE  int
}

type NTMS_MOUNT_INFORMATION struct {
	DWSIZE     int
	LPRESERVED int
}

type NTMS_ALLOCATION_INFORMATION struct {
	DWSIZE        int
	LPRESERVED    int
	AllocatedFrom int
}

type NTMS_DRIVEINFORMATIONA struct {
	Number               int
	State                int
	DriveType            int
	SZDEVICENAME         int
	SZSERIALNUMBER       int
	SZREVISION           int
	ScsiPort             int
	ScsiBus              int
	ScsiTarget           int
	ScsiLun              int
	DWMOUNTCOUNT         int
	LastCleanedTs        int
	SavedPartitionId     int
	Library              int
	Reserved             int
	DWDEFERDISMOUNTDELAY int
}

type NTMS_DRIVEINFORMATIONW struct {
	Number               int
	State                int
	DriveType            int
	SZDEVICENAME         int
	SZSERIALNUMBER       int
	SZREVISION           int
	ScsiPort             int
	ScsiBus              int
	ScsiTarget           int
	ScsiLun              int
	DWMOUNTCOUNT         int
	LastCleanedTs        int
	SavedPartitionId     int
	Library              int
	Reserved             int
	DWDEFERDISMOUNTDELAY int
}

type NTMS_LIBRARYINFORMATION struct {
	LibraryType                  int
	CleanerSlot                  int
	CleanerSlotDefault           int
	LibrarySupportsDriveCleaning int
	BarCodeReaderInstalled       int
	InventoryMethod              int
	DWCLEANERUSESREMAINING       int
	FirstDriveNumber             int
	DWNUMBEROFDRIVES             int
	FirstSlotNumber              int
	DWNUMBEROFSLOTS              int
	FirstDoorNumber              int
	DWNUMBEROFDOORS              int
	FirstPortNumber              int
	DWNUMBEROFPORTS              int
	FirstChangerNumber           int
	DWNUMBEROFCHANGERS           int
	DWNUMBEROFMEDIA              int
	DWNUMBEROFMEDIATYPES         int
	DWNUMBEROFLIBREQUESTS        int
	Reserved                     int
	AutoRecovery                 int
	DWFLAGS                      int
}

type NTMS_CHANGERINFORMATIONA struct {
	Number         int
	ChangerType    int
	SZSERIALNUMBER int
	SZREVISION     int
	SZDEVICENAME   int
	ScsiPort       int
	ScsiBus        int
	ScsiTarget     int
	ScsiLun        int
	Library        int
}

type NTMS_CHANGERINFORMATIONW struct {
	Number         int
	ChangerType    int
	SZSERIALNUMBER int
	SZREVISION     int
	SZDEVICENAME   int
	ScsiPort       int
	ScsiBus        int
	ScsiTarget     int
	ScsiLun        int
	Library        int
}

type NTMS_STORAGESLOTINFORMATION struct {
	Number  int
	State   int
	Library int
}

type NTMS_IEDOORINFORMATION struct {
	Number      int
	State       int
	MaxOpenSecs int
	Library     int
}

type NTMS_IEPORTINFORMATION struct {
	Number        int
	Content       int
	Position      int
	MaxExtendSecs int
	Library       int
}

type NTMS_PMIDINFORMATIONA struct {
	CurrentLibrary       int
	MediaPool            int
	Location             int
	LocationType         int
	MediaType            int
	HomeSlot             int
	SZBARCODE            int
	BarCodeState         int
	SZSEQUENCENUMBER     int
	MediaState           int
	DWNUMBEROFPARTITIONS int
	DWMEDIATYPECODE      int
	DWDENSITYCODE        int
	MountedPartition     int
}

type NTMS_PMIDINFORMATIONW struct {
	CurrentLibrary       int
	MediaPool            int
	Location             int
	LocationType         int
	MediaType            int
	HomeSlot             int
	SZBARCODE            int
	BarCodeState         int
	SZSEQUENCENUMBER     int
	MediaState           int
	DWNUMBEROFPARTITIONS int
	DWMEDIATYPECODE      int
	DWDENSITYCODE        int
	MountedPartition     int
}

type NTMS_LMIDINFORMATION struct {
	MediaPool            int
	DWNUMBEROFPARTITIONS int
}

type NTMS_PARTITIONINFORMATIONA struct {
	PhysicalMedia       int
	LogicalMedia        int
	State               int
	Side                int
	DWOMIDLABELIDLENGTH int
	OmidLabelId         int
	SZOMIDLABELTYPE     int
	SZOMIDLABELINFO     int
	DWMOUNTCOUNT        int
	DWALLOCATECOUNT     int
	Capacity            int
}

type NTMS_PARTITIONINFORMATIONW struct {
	PhysicalMedia       int
	LogicalMedia        int
	State               int
	Side                int
	DWOMIDLABELIDLENGTH int
	OmidLabelId         int
	SZOMIDLABELTYPE     int
	SZOMIDLABELINFO     int
	DWMOUNTCOUNT        int
	DWALLOCATECOUNT     int
	Capacity            int
}

type NTMS_MEDIAPOOLINFORMATION struct {
	PoolType                int
	MediaType               int
	Parent                  int
	AllocationPolicy        int
	DeallocationPolicy      int
	DWMAXALLOCATES          int
	DWNUMBEROFPHYSICALMEDIA int
	DWNUMBEROFLOGICALMEDIA  int
	DWNUMBEROFMEDIAPOOLS    int
}

type NTMS_MEDIATYPEINFORMATION struct {
	MediaType                int
	NumberOfSides            int
	ReadWriteCharacteristics int
	DeviceType               int
}

type NTMS_DRIVETYPEINFORMATIONA struct {
	SZVENDOR      int
	SZPRODUCT     int
	NumberOfHeads int
	DeviceType    int
}

type NTMS_DRIVETYPEINFORMATIONW struct {
	SZVENDOR      int
	SZPRODUCT     int
	NumberOfHeads int
	DeviceType    int
}

type NTMS_CHANGERTYPEINFORMATIONA struct {
	SZVENDOR   int
	SZPRODUCT  int
	DeviceType int
}

type NTMS_CHANGERTYPEINFORMATIONW struct {
	SZVENDOR   int
	SZPRODUCT  int
	DeviceType int
}

type NTMS_LIBREQUESTINFORMATIONA struct {
	OperationCode   int
	OperationOption int
	State           int
	PartitionId     int
	DriveId         int
	PhysMediaId     int
	Library         int
	SlotId          int
	TimeQueued      int
	TimeCompleted   int
	SZAPPLICATION   int
	SZUSER          int
	SZCOMPUTER      int
	DWERRORCODE     int
	WorkItemId      int
	DWPRIORITY      int
}

type NTMS_LIBREQUESTINFORMATIONW struct {
	OperationCode   int
	OperationOption int
	State           int
	PartitionId     int
	DriveId         int
	PhysMediaId     int
	Library         int
	SlotId          int
	TimeQueued      int
	TimeCompleted   int
	SZAPPLICATION   int
	SZUSER          int
	SZCOMPUTER      int
	DWERRORCODE     int
	WorkItemId      int
	DWPRIORITY      int
}

type NTMS_OPREQUESTINFORMATIONA struct {
	Request       int
	Submitted     int
	State         int
	SZMESSAGE     int
	Arg1Type      int
	Arg1          int
	Arg2Type      int
	Arg2          int
	SZAPPLICATION int
	SZUSER        int
	SZCOMPUTER    int
}

type NTMS_OPREQUESTINFORMATIONW struct {
	Request       int
	Submitted     int
	State         int
	SZMESSAGE     int
	Arg1Type      int
	Arg1          int
	Arg2Type      int
	Arg2          int
	SZAPPLICATION int
	SZUSER        int
	SZCOMPUTER    int
}

type NTMS_COMPUTERINFORMATION struct {
	DWLIBREQUESTPURGETIME int
	DWOPREQUESTPURGETIME  int
	DWLIBREQUESTFLAGS     int
	DWOPREQUESTFLAGS      int
	DWMEDIAPOOLPOLICY     int
}

type NTMS_OBJECTINFORMATIONA struct {
	DWSIZE             int
	DWTYPE             int
	Created            int
	Modified           int
	ObjectGuid         int
	Enabled            int
	DWOPERATIONALSTATE int
	SZNAME             int
	SZDESCRIPTION      int
	Info               int
}

type NTMS_OBJECTINFORMATIONW struct {
	DWSIZE             int
	DWTYPE             int
	Created            int
	Modified           int
	ObjectGuid         int
	Enabled            int
	DWOPERATIONALSTATE int
	SZNAME             int
	SZDESCRIPTION      int
	Info               int
}

type NTMS_I1_LIBRARYINFORMATION struct {
	LibraryType                  int
	CleanerSlot                  int
	CleanerSlotDefault           int
	LibrarySupportsDriveCleaning int
	BarCodeReaderInstalled       int
	InventoryMethod              int
	DWCLEANERUSESREMAINING       int
	FirstDriveNumber             int
	DWNUMBEROFDRIVES             int
	FirstSlotNumber              int
	DWNUMBEROFSLOTS              int
	FirstDoorNumber              int
	DWNUMBEROFDOORS              int
	FirstPortNumber              int
	DWNUMBEROFPORTS              int
	FirstChangerNumber           int
	DWNUMBEROFCHANGERS           int
	DWNUMBEROFMEDIA              int
	DWNUMBEROFMEDIATYPES         int
	DWNUMBEROFLIBREQUESTS        int
	Reserved                     int
}

type NTMS_I1_LIBREQUESTINFORMATIONA struct {
	OperationCode   int
	OperationOption int
	State           int
	PartitionId     int
	DriveId         int
	PhysMediaId     int
	Library         int
	SlotId          int
	TimeQueued      int
	TimeCompleted   int
	SZAPPLICATION   int
	SZUSER          int
	SZCOMPUTER      int
}

type NTMS_I1_LIBREQUESTINFORMATIONW struct {
	OperationCode   int
	OperationOption int
	State           int
	PartitionId     int
	DriveId         int
	PhysMediaId     int
	Library         int
	SlotId          int
	TimeQueued      int
	TimeCompleted   int
	SZAPPLICATION   int
	SZUSER          int
	SZCOMPUTER      int
}

type NTMS_I1_PMIDINFORMATIONA struct {
	CurrentLibrary       int
	MediaPool            int
	Location             int
	LocationType         int
	MediaType            int
	HomeSlot             int
	SZBARCODE            int
	BarCodeState         int
	SZSEQUENCENUMBER     int
	MediaState           int
	DWNUMBEROFPARTITIONS int
}

type NTMS_I1_PMIDINFORMATIONW struct {
	CurrentLibrary       int
	MediaPool            int
	Location             int
	LocationType         int
	MediaType            int
	HomeSlot             int
	SZBARCODE            int
	BarCodeState         int
	SZSEQUENCENUMBER     int
	MediaState           int
	DWNUMBEROFPARTITIONS int
}

type NTMS_I1_PARTITIONINFORMATIONA struct {
	PhysicalMedia       int
	LogicalMedia        int
	State               int
	Side                int
	DWOMIDLABELIDLENGTH int
	OmidLabelId         int
	SZOMIDLABELTYPE     int
	SZOMIDLABELINFO     int
	DWMOUNTCOUNT        int
	DWALLOCATECOUNT     int
}

type NTMS_I1_PARTITIONINFORMATIONW struct {
	PhysicalMedia       int
	LogicalMedia        int
	State               int
	Side                int
	DWOMIDLABELIDLENGTH int
	OmidLabelId         int
	SZOMIDLABELTYPE     int
	SZOMIDLABELINFO     int
	DWMOUNTCOUNT        int
	DWALLOCATECOUNT     int
}

type NTMS_I1_OPREQUESTINFORMATIONA struct {
	Request       int
	Submitted     int
	State         int
	SZMESSAGE     int
	Arg1Type      int
	Arg1          int
	Arg2Type      int
	Arg2          int
	SZAPPLICATION int
	SZUSER        int
	SZCOMPUTER    int
}

type NTMS_I1_OPREQUESTINFORMATIONW struct {
	Request       int
	Submitted     int
	State         int
	SZMESSAGE     int
	Arg1Type      int
	Arg1          int
	Arg2Type      int
	Arg2          int
	SZAPPLICATION int
	SZUSER        int
	SZCOMPUTER    int
}

type NTMS_I1_OBJECTINFORMATIONA struct {
	DWSIZE             int
	DWTYPE             int
	Created            int
	Modified           int
	ObjectGuid         int
	Enabled            int
	DWOPERATIONALSTATE int
	SZNAME             int
	SZDESCRIPTION      int
	Info               int
}

type NTMS_I1_OBJECTINFORMATIONW struct {
	DWSIZE             int
	DWTYPE             int
	Created            int
	Modified           int
	ObjectGuid         int
	Enabled            int
	DWOPERATIONALSTATE int
	SZNAME             int
	SZDESCRIPTION      int
	Info               int
}

type NTMS_FILESYSTEM_INFO struct {
	FileSystemType int
	VolumeName     int
	SerialNumber   int
}

type NTMS_NOTIFICATIONINFORMATION struct {
	DWOPERATION int
	ObjectId    int
}

type MediaLabelInfo struct {
	LabelType     int
	LabelIDSize   int
	LabelID       int
	LabelAppDescr int
}

type CLS_LSN struct {
	Internal int
}

type CLFS_NODE_ID struct {
	CTYPE  int
	CBNODE int
}

type CLS_WRITE_ENTRY struct {
	Buffer     int
	ByteLength int
}

type CLS_INFORMATION struct {
	TotalAvailable    int
	CurrentAvailable  int
	TotalReservation  int
	BaseFileSize      int
	ContainerSize     int
	TotalContainers   int
	FreeContainers    int
	TotalClients      int
	Attributes        int
	FlushThreshold    int
	SectorSize        int
	MinArchiveTailLsn int
	BaseLsn           int
	LastFlushedLsn    int
	LastLsn           int
	RestartLsn        int
	Identity          int
}

type CLFS_LOG_NAME_INFORMATION struct {
	NameLengthInBytes int
	Name              int
}

type CLFS_STREAM_ID_INFORMATION struct {
	StreamIdentifier int
}

type CLFS_PHYSICAL_LSN_INFORMATION struct {
	StreamIdentifier int
	VirtualLsn       int
	PhysicalLsn      int
}

type CLS_CONTAINER_INFORMATION struct {
	FileAttributes       int
	CreationTime         int
	LastAccessTime       int
	LastWriteTime        int
	ContainerSize        int
	FileNameActualLength int
	FileNameLength       int
	FileName             int
	State                int
	PhysicalContainerId  int
	LogicalContainerId   int
}

type CLS_IO_STATISTICS_HEADER struct {
	UBMAJORVERSION int
	UBMINORVERSION int
	ESTATSCLASS    int
	CBLENGTH       int
	COFFDATA       int
}

type CLS_IO_STATISTICS struct {
	HDRIOSTATS  int
	CFLUSH      int
	CBFLUSH     int
	CMETAFLUSH  int
	CBMETAFLUSH int
}

type CLS_SCAN_CONTEXT struct {
	CIDNODE             int
	HLOG                int
	CINDEX              int
	CCONTAINERS         int
	CCONTAINERSRETURNED int
	ESCANMODE           int
	PINFOCONTAINER      int
}

type CLS_ARCHIVE_DESCRIPTOR struct {
	COFFLOW       int
	COFFHIGH      int
	INFOCONTAINER int
}

type CLFS_MGMT_POLICY struct {
	Version          int
	LengthInBytes    int
	PolicyFlags      int
	PolicyType       int
	PolicyParameters int
}

type CLFS_MGMT_NOTIFICATION struct {
	Notification int
	Lsn          int
	LogIsPinned  int
}

type LOG_MANAGEMENT_CALLBACKS struct {
	CallbackContext        int
	AdvanceTailCallback    int
	LogFullHandlerCallback int
	LogUnpinnedCallback    int
}

type DISKQUOTA_USER_INFORMATION struct {
	QuotaUsed      int
	QuotaThreshold int
	QuotaLimit     int
}

type WIM_ENTRY_INFO struct {
	WimEntryInfoSize int
	WimType          int
	DataSourceId     int
	WimGuid          int
	WimPath          int
	WimIndex         int
	Flags            int
}

type WIM_EXTERNAL_FILE_INFO struct {
	DataSourceId int
	ResourceHash int
	Flags        int
}

type WOF_FILE_COMPRESSION_INFO_V0 struct {
	Algorithm int
}

type WOF_FILE_COMPRESSION_INFO_V1 struct {
	Algorithm int
	Flags     int
}

type TXF_ID struct {
	Anonymous int
}

type TXF_LOG_RECORD_BASE struct {
	Version      int
	RecordType   int
	RecordLength int
}

type TXF_LOG_RECORD_WRITE struct {
	Version                       int
	RecordType                    int
	RecordLength                  int
	Flags                         int
	TxfFileId                     int
	KtmGuid                       int
	ByteOffsetInFile              int
	NumBytesWritten               int
	ByteOffsetInStructure         int
	FileNameLength                int
	FileNameByteOffsetInStructure int
}

type TXF_LOG_RECORD_TRUNCATE struct {
	Version                       int
	RecordType                    int
	RecordLength                  int
	Flags                         int
	TxfFileId                     int
	KtmGuid                       int
	NewFileSize                   int
	FileNameLength                int
	FileNameByteOffsetInStructure int
}

type TXF_LOG_RECORD_AFFECTED_FILE struct {
	Version                       int
	RecordLength                  int
	Flags                         int
	TxfFileId                     int
	KtmGuid                       int
	FileNameLength                int
	FileNameByteOffsetInStructure int
}

type VOLUME_FAILOVER_SET struct {
	NumberOfDisks int
	DiskNumbers   int
}

type VOLUME_NUMBER struct {
	VolumeNumber      int
	VolumeManagerName int
}

type VOLUME_LOGICAL_OFFSET struct {
	LogicalOffset int
}

type VOLUME_PHYSICAL_OFFSET struct {
	DiskNumber int
	Offset     int
}

type VOLUME_PHYSICAL_OFFSETS struct {
	NumberOfPhysicalOffsets int
	PhysicalOffset          int
}

type VOLUME_READ_PLEX_INPUT struct {
	ByteOffset int
	Length     int
	PlexNumber int
}

type VOLUME_SET_GPT_ATTRIBUTES_INFORMATION struct {
	GptAttributes              int
	RevertOnClose              int
	ApplyToAllConnectedVolumes int
	Reserved1                  int
	Reserved2                  int
}

type VOLUME_GET_BC_PROPERTIES_INPUT struct {
	Version           int
	Reserved1         int
	LowestByteOffset  int
	HighestByteOffset int
	AccessType        int
	AccessMode        int
}

type VOLUME_GET_BC_PROPERTIES_OUTPUT struct {
	MaximumRequestsPerPeriod int
	MinimumPeriod            int
	MaximumRequestSize       int
	EstimatedTimePerRequest  int
	NumOutStandingRequests   int
	RequestSize              int
}

type VOLUME_ALLOCATE_BC_STREAM_INPUT struct {
	Version           int
	RequestsPerPeriod int
	Period            int
	RetryFailures     int
	Discardable       int
	Reserved1         int
	LowestByteOffset  int
	HighestByteOffset int
	AccessType        int
	AccessMode        int
}

type VOLUME_ALLOCATE_BC_STREAM_OUTPUT struct {
	RequestSize            int
	NumOutStandingRequests int
}

type FILE_EXTENT struct {
	VolumeOffset int
	ExtentLength int
}

type VOLUME_CRITICAL_IO struct {
	AccessType   int
	ExtentsCount int
	Extents      int
}

type VOLUME_ALLOCATION_HINT_INPUT struct {
	ClusterSize           int
	NumberOfClusters      int
	StartingClusterNumber int
}

type VOLUME_ALLOCATION_HINT_OUTPUT struct {
	Bitmap int
}

type VOLUME_SHRINK_INFO struct {
	VolumeSize int
}

type SHARE_INFO_0 struct {
	SHI0_NETNAME int
}

type SHARE_INFO_1 struct {
	SHI1_NETNAME int
	SHI1_TYPE    int
	SHI1_REMARK  int
}

type SHARE_INFO_2 struct {
	SHI2_NETNAME      int
	SHI2_TYPE         int
	SHI2_REMARK       int
	SHI2_PERMISSIONS  int
	SHI2_MAX_USES     int
	SHI2_CURRENT_USES int
	SHI2_PATH         int
	SHI2_PASSWD       int
}

type SHARE_INFO_501 struct {
	SHI501_NETNAME int
	SHI501_TYPE    int
	SHI501_REMARK  int
	SHI501_FLAGS   int
}

type SHARE_INFO_502 struct {
	SHI502_NETNAME             int
	SHI502_TYPE                int
	SHI502_REMARK              int
	SHI502_PERMISSIONS         int
	SHI502_MAX_USES            int
	SHI502_CURRENT_USES        int
	SHI502_PATH                int
	SHI502_PASSWD              int
	SHI502_RESERVED            int
	SHI502_SECURITY_DESCRIPTOR int
}

type SHARE_INFO_503 struct {
	SHI503_NETNAME             int
	SHI503_TYPE                int
	SHI503_REMARK              int
	SHI503_PERMISSIONS         int
	SHI503_MAX_USES            int
	SHI503_CURRENT_USES        int
	SHI503_PATH                int
	SHI503_PASSWD              int
	SHI503_SERVERNAME          int
	SHI503_RESERVED            int
	SHI503_SECURITY_DESCRIPTOR int
}

type SHARE_INFO_1004 struct {
	SHI1004_REMARK int
}

type SHARE_INFO_1005 struct {
	SHI1005_FLAGS int
}

type SHARE_INFO_1006 struct {
	SHI1006_MAX_USES int
}

type SHARE_INFO_1501 struct {
	SHI1501_RESERVED            int
	SHI1501_SECURITY_DESCRIPTOR int
}

type SHARE_INFO_1503 struct {
	SHI1503_SHAREFILTER int
}

type SERVER_ALIAS_INFO_0 struct {
	SRVAI0_ALIAS    int
	SRVAI0_TARGET   int
	SRVAI0_DEFAULT  int
	SRVAI0_RESERVED int
}

type SESSION_INFO_0 struct {
	SESI0_CNAME int
}

type SESSION_INFO_1 struct {
	SESI1_CNAME      int
	SESI1_USERNAME   int
	SESI1_NUM_OPENS  int
	SESI1_TIME       int
	SESI1_IDLE_TIME  int
	SESI1_USER_FLAGS int
}

type SESSION_INFO_2 struct {
	SESI2_CNAME       int
	SESI2_USERNAME    int
	SESI2_NUM_OPENS   int
	SESI2_TIME        int
	SESI2_IDLE_TIME   int
	SESI2_USER_FLAGS  int
	SESI2_CLTYPE_NAME int
}

type SESSION_INFO_10 struct {
	SESI10_CNAME     int
	SESI10_USERNAME  int
	SESI10_TIME      int
	SESI10_IDLE_TIME int
}

type SESSION_INFO_502 struct {
	SESI502_CNAME       int
	SESI502_USERNAME    int
	SESI502_NUM_OPENS   int
	SESI502_TIME        int
	SESI502_IDLE_TIME   int
	SESI502_USER_FLAGS  int
	SESI502_CLTYPE_NAME int
	SESI502_TRANSPORT   int
}

type CONNECTION_INFO_0 struct {
	CONI0_ID int
}

type CONNECTION_INFO_1 struct {
	CONI1_ID        int
	CONI1_TYPE      int
	CONI1_NUM_OPENS int
	CONI1_NUM_USERS int
	CONI1_TIME      int
	CONI1_USERNAME  int
	CONI1_NETNAME   int
}

type FILE_INFO_2 struct {
	FI2_ID int
}

type FILE_INFO_3 struct {
	FI3_ID          int
	FI3_PERMISSIONS int
	FI3_NUM_LOCKS   int
	FI3_PATHNAME    int
	FI3_USERNAME    int
}

type SERVER_CERTIFICATE_INFO_0 struct {
	SRVCI0_NAME          int
	SRVCI0_SUBJECT       int
	SRVCI0_ISSUER        int
	SRVCI0_THUMBPRINT    int
	SRVCI0_FRIENDLYNAME  int
	SRVCI0_NOTBEFORE     int
	SRVCI0_NOTAFTER      int
	SRVCI0_STORELOCATION int
	SRVCI0_STORENAME     int
	SRVCI0_TYPE          int
}

type STAT_WORKSTATION_0 struct {
	StatisticsStartTime          int
	BytesReceived                int
	SmbsReceived                 int
	PagingReadBytesRequested     int
	NonPagingReadBytesRequested  int
	CacheReadBytesRequested      int
	NetworkReadBytesRequested    int
	BytesTransmitted             int
	SmbsTransmitted              int
	PagingWriteBytesRequested    int
	NonPagingWriteBytesRequested int
	CacheWriteBytesRequested     int
	NetworkWriteBytesRequested   int
	InitiallyFailedOperations    int
	FailedCompletionOperations   int
	ReadOperations               int
	RandomReadOperations         int
	ReadSmbs                     int
	LargeReadSmbs                int
	SmallReadSmbs                int
	WriteOperations              int
	RandomWriteOperations        int
	WriteSmbs                    int
	LargeWriteSmbs               int
	SmallWriteSmbs               int
	RawReadsDenied               int
	RawWritesDenied              int
	NetworkErrors                int
	Sessions                     int
	FailedSessions               int
	Reconnects                   int
	CoreConnects                 int
	Lanman20Connects             int
	Lanman21Connects             int
	LanmanNtConnects             int
	ServerDisconnects            int
	HungSessions                 int
	UseCount                     int
	FailedUseCount               int
	CurrentCommands              int
}

type STAT_SERVER_0 struct {
	STS0_START          int
	STS0_FOPENS         int
	STS0_DEVOPENS       int
	STS0_JOBSQUEUED     int
	STS0_SOPENS         int
	STS0_STIMEDOUT      int
	STS0_SERROROUT      int
	STS0_PWERRORS       int
	STS0_PERMERRORS     int
	STS0_SYSERRORS      int
	STS0_BYTESSENT_LOW  int
	STS0_BYTESSENT_HIGH int
	STS0_BYTESRCVD_LOW  int
	STS0_BYTESRCVD_HIGH int
	STS0_AVRESPONSE     int
	STS0_REQBUFNEED     int
	STS0_BIGBUFNEED     int
}

type OVERLAPPED_ENTRY struct {
	LPCOMPLETIONKEY            int
	LPOVERLAPPED               int
	Internal                   int
	DWNUMBEROFBYTESTRANSFERRED int
}

type WIN32_FIND_DATAA struct {
	DWFILEATTRIBUTES   int
	FTCREATIONTIME     int
	FTLASTACCESSTIME   int
	FTLASTWRITETIME    int
	NFILESIZEHIGH      int
	NFILESIZELOW       int
	DWRESERVED0        int
	DWRESERVED1        int
	CFILENAME          int
	CALTERNATEFILENAME int
}

type WIN32_FIND_DATAW struct {
	DWFILEATTRIBUTES   int
	FTCREATIONTIME     int
	FTLASTACCESSTIME   int
	FTLASTWRITETIME    int
	NFILESIZEHIGH      int
	NFILESIZELOW       int
	DWRESERVED0        int
	DWRESERVED1        int
	CFILENAME          int
	CALTERNATEFILENAME int
}

type STORAGE_PROPERTY_QUERY struct {
	PropertyId           int
	QueryType            int
	AdditionalParameters int
}

type STORAGE_DESCRIPTOR_HEADER struct {
	Version int
	Size    int
}

type STORAGE_DEVICE_DESCRIPTOR struct {
	Version               int
	Size                  int
	DeviceType            int
	DeviceTypeModifier    int
	RemovableMedia        int
	CommandQueueing       int
	VendorIdOffset        int
	ProductIdOffset       int
	ProductRevisionOffset int
	SerialNumberOffset    int
	BusType               int
	RawPropertiesLength   int
	RawDeviceProperties   int
}

type STORAGE_ADAPTER_DESCRIPTOR struct {
	Version               int
	Size                  int
	MaximumTransferLength int
	MaximumPhysicalPages  int
	AlignmentMask         int
	AdapterUsesPio        int
	AdapterScansDown      int
	CommandQueueing       int
	AcceleratedTransfer   int
	BusType               int
	BusMajorVersion       int
	BusMinorVersion       int
	SrbType               int
	AddressType           int
}

type STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR struct {
	Version                       int
	Size                          int
	BytesPerCacheLine             int
	BytesOffsetForCacheAlignment  int
	BytesPerLogicalSector         int
	BytesPerPhysicalSector        int
	BytesOffsetForSectorAlignment int
}

type STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR struct {
	Version           int
	Size              int
	MediumProductType int
}

type STORAGE_MINIPORT_DESCRIPTOR struct {
	Version              int
	Size                 int
	Portdriver           int
	LUNResetSupported    int
	TargetResetSupported int
	IoTimeoutValue       int
	ExtraIoInfoSupported int
	Reserved0            int
	Reserved1            int
}

type STORAGE_DEVICE_ID_DESCRIPTOR struct {
	Version             int
	Size                int
	NumberOfIdentifiers int
	Identifiers         int
}

type DEVICE_SEEK_PENALTY_DESCRIPTOR struct {
	Version           int
	Size              int
	IncursSeekPenalty int
}

type DEVICE_WRITE_AGGREGATION_DESCRIPTOR struct {
	Version                      int
	Size                         int
	BenefitsFromWriteAggregation int
}

type DEVICE_TRIM_DESCRIPTOR struct {
	Version     int
	Size        int
	TrimEnabled int
}

type DEVICE_LB_PROVISIONING_DESCRIPTOR struct {
	Version                      int
	Size                         int
	BITFIELD                     int
	Reserved1                    int
	OptimalUnmapGranularity      int
	UnmapGranularityAlignment    int
	MaxUnmapLbaCount             int
	MaxUnmapBlockDescriptorCount int
}

type DEVICE_POWER_DESCRIPTOR struct {
	Version                           int
	Size                              int
	DeviceAttentionSupported          int
	AsynchronousNotificationSupported int
	IdlePowerManagementEnabled        int
	D3ColdEnabled                     int
	D3ColdSupported                   int
	NoVerifyDuringIdlePower           int
	Reserved                          int
	IdleTimeoutInMS                   int
}

type DEVICE_COPY_OFFLOAD_DESCRIPTOR struct {
	Version                            int
	Size                               int
	MaximumTokenLifetime               int
	DefaultTokenLifetime               int
	MaximumTransferSize                int
	OptimalTransferCount               int
	MaximumDataDescriptors             int
	MaximumTransferLengthPerDescriptor int
	OptimalTransferLengthPerDescriptor int
	OptimalTransferLengthGranularity   int
	Reserved                           int
}

type STORAGE_DEVICE_RESILIENCY_DESCRIPTOR struct {
	Version                int
	Size                   int
	NameOffset             int
	NumberOfLogicalCopies  int
	NumberOfPhysicalCopies int
	PhysicalDiskRedundancy int
	NumberOfColumns        int
	Interleave             int
}

type STORAGE_PROTOCOL_SPECIFIC_DATA struct {
	ProtocolType                 int
	DataType                     int
	ProtocolDataRequestValue     int
	ProtocolDataRequestSubValue  int
	ProtocolDataOffset           int
	ProtocolDataLength           int
	FixedProtocolReturnData      int
	ProtocolDataRequestSubValue2 int
	ProtocolDataRequestSubValue3 int
	Reserved                     int
}

type STORAGE_PROTOCOL_DATA_DESCRIPTOR struct {
	Version              int
	Size                 int
	ProtocolSpecificData int
}

type STORAGE_TEMPERATURE_INFO struct {
	Index                   int
	Temperature             int
	OverThreshold           int
	UnderThreshold          int
	OverThresholdChangable  int
	UnderThresholdChangable int
	EventGenerated          int
	Reserved0               int
	Reserved1               int
}

type STORAGE_TEMPERATURE_DATA_DESCRIPTOR struct {
	Version             int
	Size                int
	CriticalTemperature int
	WarningTemperature  int
	InfoCount           int
	Reserved0           int
	Reserved1           int
	TemperatureInfo     int
}

type STORAGE_TEMPERATURE_THRESHOLD struct {
	Version       int
	Size          int
	Flags         int
	Index         int
	Threshold     int
	OverThreshold int
	Reserved      int
}

type STORAGE_SPEC_VERSION struct {
	Anonymous int
	AsUlong   int
}

type STORAGE_PHYSICAL_DEVICE_DATA struct {
	DeviceId         int
	Role             int
	HealthStatus     int
	CommandProtocol  int
	SpecVersion      int
	FormFactor       int
	Vendor           int
	Model            int
	FirmwareRevision int
	Capacity         int
	PhysicalLocation int
	Reserved         int
}

type STORAGE_PHYSICAL_ADAPTER_DATA struct {
	AdapterId         int
	HealthStatus      int
	CommandProtocol   int
	SpecVersion       int
	Vendor            int
	Model             int
	FirmwareRevision  int
	PhysicalLocation  int
	ExpanderConnected int
	Reserved0         int
	Reserved1         int
}

type STORAGE_PHYSICAL_NODE_DATA struct {
	NodeId            int
	AdapterCount      int
	AdapterDataLength int
	AdapterDataOffset int
	DeviceCount       int
	DeviceDataLength  int
	DeviceDataOffset  int
	Reserved          int
}

type STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR struct {
	Version   int
	Size      int
	NodeCount int
	Reserved  int
	Node      int
}

type STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR struct {
	Version           int
	Size              int
	LunMaxIoCount     int
	AdapterMaxIoCount int
}

type STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR struct {
	Version    int
	Size       int
	Attributes int
}

type STORAGE_ADAPTER_SERIAL_NUMBER struct {
	Version      int
	Size         int
	SerialNumber int
}

type STORAGE_WRITE_CACHE_PROPERTY struct {
	Version                    int
	Size                       int
	WriteCacheType             int
	WriteCacheEnabled          int
	WriteCacheChangeable       int
	WriteThroughSupported      int
	FlushCacheSupported        int
	UserDefinedPowerProtection int
	NVCacheEnabled             int
}

type STORAGE_DEVICE_POWER_CAP struct {
	Version  int
	Size     int
	Units    int
	MaxPower int
}

type STORAGE_HW_FIRMWARE_DOWNLOAD struct {
	Version     int
	Size        int
	Flags       int
	Slot        int
	Reserved    int
	Offset      int
	BufferSize  int
	ImageBuffer int
}

type STORAGE_HW_FIRMWARE_ACTIVATE struct {
	Version   int
	Size      int
	Flags     int
	Slot      int
	Reserved0 int
}

type STORAGE_PROTOCOL_COMMAND struct {
	Version                      int
	Length                       int
	ProtocolType                 int
	Flags                        int
	ReturnStatus                 int
	ErrorCode                    int
	CommandLength                int
	ErrorInfoLength              int
	DataToDeviceTransferLength   int
	DataFromDeviceTransferLength int
	TimeOutValue                 int
	ErrorInfoOffset              int
	DataToDeviceBufferOffset     int
	DataFromDeviceBufferOffset   int
	CommandSpecific              int
	Reserved0                    int
	FixedProtocolReturnData      int
	Reserved1                    int
	Command                      int
}

type FORMAT_PARAMETERS struct {
	MediaType           int
	StartCylinderNumber int
	EndCylinderNumber   int
	StartHeadNumber     int
	EndHeadNumber       int
}

type FORMAT_EX_PARAMETERS struct {
	MediaType           int
	StartCylinderNumber int
	EndCylinderNumber   int
	StartHeadNumber     int
	EndHeadNumber       int
	FormatGapLength     int
	SectorsPerTrack     int
	SectorNumber        int
}

type DISK_GEOMETRY struct {
	Cylinders         int
	MediaType         int
	TracksPerCylinder int
	SectorsPerTrack   int
	BytesPerSector    int
}

type PARTITION_INFORMATION struct {
	StartingOffset      int
	PartitionLength     int
	HiddenSectors       int
	PartitionNumber     int
	PartitionType       int
	BootIndicator       int
	RecognizedPartition int
	RewritePartition    int
}

type SET_PARTITION_INFORMATION struct {
	PartitionType int
}

type DRIVE_LAYOUT_INFORMATION struct {
	PartitionCount int
	Signature      int
	PartitionEntry int
}

type VERIFY_INFORMATION struct {
	StartingOffset int
	Length         int
}

type REASSIGN_BLOCKS struct {
	Reserved    int
	Count       int
	BlockNumber int
}

type REASSIGN_BLOCKS_EX struct {
	Reserved    int
	Count       int
	BlockNumber int
}

type PARTITION_INFORMATION_GPT struct {
	PartitionType int
	PartitionId   int
	Attributes    int
	Name          int
}

type PARTITION_INFORMATION_MBR struct {
	PartitionType       int
	BootIndicator       int
	RecognizedPartition int
	HiddenSectors       int
	PartitionId         int
}

type CREATE_DISK_GPT struct {
	DiskId            int
	MaxPartitionCount int
}

type CREATE_DISK_MBR struct {
	Signature int
}

type CREATE_DISK struct {
	PartitionStyle int
	Anonymous      int
}

type GET_LENGTH_INFORMATION struct {
	Length int
}

type PARTITION_INFORMATION_EX struct {
	PartitionStyle     int
	StartingOffset     int
	PartitionLength    int
	PartitionNumber    int
	RewritePartition   int
	IsServicePartition int
	Anonymous          int
}

type DRIVE_LAYOUT_INFORMATION_GPT struct {
	DiskId               int
	StartingUsableOffset int
	UsableLength         int
	MaxPartitionCount    int
}

type DRIVE_LAYOUT_INFORMATION_MBR struct {
	Signature int
	CheckSum  int
}

type DRIVE_LAYOUT_INFORMATION_EX struct {
	PartitionStyle int
	PartitionCount int
	Anonymous      int
	PartitionEntry int
}

type DISK_INT13_INFO struct {
	DriveSelect     int
	MaxCylinders    int
	SectorsPerTrack int
	MaxHeads        int
	NumberDrives    int
}

type DISK_EX_INT13_INFO struct {
	ExBufferSize      int
	ExFlags           int
	ExCylinders       int
	ExHeads           int
	ExSectorsPerTrack int
	ExSectorsPerDrive int
	ExSectorSize      int
	ExReserved        int
}

type DISK_DETECTION_INFO struct {
	SizeOfDetectInfo int
	DetectionType    int
	Anonymous        int
}

type DISK_PARTITION_INFO struct {
	SizeOfPartitionInfo int
	PartitionStyle      int
	Anonymous           int
}

type DISK_GEOMETRY_EX struct {
	Geometry int
	DiskSize int
	Data     int
}

type DISK_CACHE_INFORMATION struct {
	ParametersSavable             int
	ReadCacheEnabled              int
	WriteCacheEnabled             int
	ReadRetentionPriority         int
	WriteRetentionPriority        int
	DisablePrefetchTransferLength int
	PrefetchScalar                int
	Anonymous                     int
}

type DISK_GROW_PARTITION struct {
	PartitionNumber int
	BytesToGrow     int
}

type DISK_PERFORMANCE struct {
	BytesRead           int
	BytesWritten        int
	ReadTime            int
	WriteTime           int
	IdleTime            int
	ReadCount           int
	WriteCount          int
	QueueDepth          int
	SplitCount          int
	QueryTime           int
	StorageDeviceNumber int
	StorageManagerName  int
}

type GET_DISK_ATTRIBUTES struct {
	Version    int
	Reserved1  int
	Attributes int
}

type SET_DISK_ATTRIBUTES struct {
	Version        int
	Persist        int
	Reserved1      int
	Attributes     int
	AttributesMask int
	Reserved2      int
}

type NTFS_VOLUME_DATA_BUFFER struct {
	VolumeSerialNumber           int
	NumberSectors                int
	TotalClusters                int
	FreeClusters                 int
	TotalReserved                int
	BytesPerSector               int
	BytesPerCluster              int
	BytesPerFileRecordSegment    int
	ClustersPerFileRecordSegment int
	MftValidDataLength           int
	MftStartLcn                  int
	Mft2StartLcn                 int
	MftZoneStart                 int
	MftZoneEnd                   int
}

type NTFS_EXTENDED_VOLUME_DATA struct {
	ByteCount                int
	MajorVersion             int
	MinorVersion             int
	BytesPerPhysicalSector   int
	LfsMajorVersion          int
	LfsMinorVersion          int
	MaxDeviceTrimExtentCount int
	MaxDeviceTrimByteCount   int
	MaxVolumeTrimExtentCount int
	MaxVolumeTrimByteCount   int
}

type STARTING_LCN_INPUT_BUFFER struct {
	StartingLcn int
}

type VOLUME_BITMAP_BUFFER struct {
	StartingLcn int
	BitmapSize  int
	Buffer      int
}

type STARTING_VCN_INPUT_BUFFER struct {
	StartingVcn int
}

type RETRIEVAL_POINTERS_BUFFER struct {
	ExtentCount int
	StartingVcn int
	Extents     int
}

type NTFS_FILE_RECORD_INPUT_BUFFER struct {
	FileReferenceNumber int
}

type NTFS_FILE_RECORD_OUTPUT_BUFFER struct {
	FileReferenceNumber int
	FileRecordLength    int
	FileRecordBuffer    int
}

type MOVE_FILE_DATA struct {
	FileHandle   int
	StartingVcn  int
	StartingLcn  int
	ClusterCount int
}

type FIND_BY_SID_DATA struct {
	Restart int
	Sid     int
}

type FIND_BY_SID_OUTPUT struct {
	NextEntryOffset int
	FileIndex       int
	FileNameLength  int
	FileName        int
}

type MFT_ENUM_DATA_V0 struct {
	StartFileReferenceNumber int
	LowUsn                   int
	HighUsn                  int
}

type MFT_ENUM_DATA_V1 struct {
	StartFileReferenceNumber int
	LowUsn                   int
	HighUsn                  int
	MinMajorVersion          int
	MaxMajorVersion          int
}

type CREATE_USN_JOURNAL_DATA struct {
	MaximumSize     int
	AllocationDelta int
}

type READ_FILE_USN_DATA struct {
	MinMajorVersion int
	MaxMajorVersion int
}

type READ_USN_JOURNAL_DATA_V0 struct {
	StartUsn          int
	ReasonMask        int
	ReturnOnlyOnClose int
	Timeout           int
	BytesToWaitFor    int
	UsnJournalID      int
}

type READ_USN_JOURNAL_DATA_V1 struct {
	StartUsn          int
	ReasonMask        int
	ReturnOnlyOnClose int
	Timeout           int
	BytesToWaitFor    int
	UsnJournalID      int
	MinMajorVersion   int
	MaxMajorVersion   int
}

type USN_TRACK_MODIFIED_RANGES struct {
	Flags             int
	Unused            int
	ChunkSize         int
	FileSizeThreshold int
}

type USN_RANGE_TRACK_OUTPUT struct {
	Usn int
}

type USN_RECORD_V2 struct {
	RecordLength              int
	MajorVersion              int
	MinorVersion              int
	FileReferenceNumber       int
	ParentFileReferenceNumber int
	Usn                       int
	TimeStamp                 int
	Reason                    int
	SourceInfo                int
	SecurityId                int
	FileAttributes            int
	FileNameLength            int
	FileNameOffset            int
	FileName                  int
}

type USN_RECORD_V3 struct {
	RecordLength              int
	MajorVersion              int
	MinorVersion              int
	FileReferenceNumber       int
	ParentFileReferenceNumber int
	Usn                       int
	TimeStamp                 int
	Reason                    int
	SourceInfo                int
	SecurityId                int
	FileAttributes            int
	FileNameLength            int
	FileNameOffset            int
	FileName                  int
}

type USN_RECORD_COMMON_HEADER struct {
	RecordLength int
	MajorVersion int
	MinorVersion int
}

type USN_RECORD_EXTENT struct {
	Offset int
	Length int
}

type USN_RECORD_V4 struct {
	Header                    int
	FileReferenceNumber       int
	ParentFileReferenceNumber int
	Usn                       int
	Reason                    int
	SourceInfo                int
	RemainingExtents          int
	NumberOfExtents           int
	ExtentSize                int
	Extents                   int
}

type USN_JOURNAL_DATA_V0 struct {
	UsnJournalID    int
	FirstUsn        int
	NextUsn         int
	LowestValidUsn  int
	MaxUsn          int
	MaximumSize     int
	AllocationDelta int
}

type USN_JOURNAL_DATA_V1 struct {
	UsnJournalID             int
	FirstUsn                 int
	NextUsn                  int
	LowestValidUsn           int
	MaxUsn                   int
	MaximumSize              int
	AllocationDelta          int
	MinSupportedMajorVersion int
	MaxSupportedMajorVersion int
}

type USN_JOURNAL_DATA_V2 struct {
	UsnJournalID                int
	FirstUsn                    int
	NextUsn                     int
	LowestValidUsn              int
	MaxUsn                      int
	MaximumSize                 int
	AllocationDelta             int
	MinSupportedMajorVersion    int
	MaxSupportedMajorVersion    int
	Flags                       int
	RangeTrackChunkSize         int
	RangeTrackFileSizeThreshold int
}

type DELETE_USN_JOURNAL_DATA struct {
	UsnJournalID int
	DeleteFlags  int
}

type MARK_HANDLE_INFO struct {
	Anonymous    int
	VolumeHandle int
	HandleInfo   int
}

type FILESYSTEM_STATISTICS struct {
	FileSystemType          int
	Version                 int
	SizeOfCompleteStructure int
	UserFileReads           int
	UserFileReadBytes       int
	UserDiskReads           int
	UserFileWrites          int
	UserFileWriteBytes      int
	UserDiskWrites          int
	MetaDataReads           int
	MetaDataReadBytes       int
	MetaDataDiskReads       int
	MetaDataWrites          int
	MetaDataWriteBytes      int
	MetaDataDiskWrites      int
}

type FAT_STATISTICS struct {
	CreateHits          int
	SuccessfulCreates   int
	FailedCreates       int
	NonCachedReads      int
	NonCachedReadBytes  int
	NonCachedWrites     int
	NonCachedWriteBytes int
	NonCachedDiskReads  int
	NonCachedDiskWrites int
}

type EXFAT_STATISTICS struct {
	CreateHits          int
	SuccessfulCreates   int
	FailedCreates       int
	NonCachedReads      int
	NonCachedReadBytes  int
	NonCachedWrites     int
	NonCachedWriteBytes int
	NonCachedDiskReads  int
	NonCachedDiskWrites int
}

type NTFS_STATISTICS struct {
	LogFileFullExceptions              int
	OtherExceptions                    int
	MftReads                           int
	MftReadBytes                       int
	MftWrites                          int
	MftWriteBytes                      int
	MftWritesUserLevel                 int
	MftWritesFlushForLogFileFull       int
	MftWritesLazyWriter                int
	MftWritesUserRequest               int
	Mft2Writes                         int
	Mft2WriteBytes                     int
	Mft2WritesUserLevel                int
	Mft2WritesFlushForLogFileFull      int
	Mft2WritesLazyWriter               int
	Mft2WritesUserRequest              int
	RootIndexReads                     int
	RootIndexReadBytes                 int
	RootIndexWrites                    int
	RootIndexWriteBytes                int
	BitmapReads                        int
	BitmapReadBytes                    int
	BitmapWrites                       int
	BitmapWriteBytes                   int
	BitmapWritesFlushForLogFileFull    int
	BitmapWritesLazyWriter             int
	BitmapWritesUserRequest            int
	BitmapWritesUserLevel              int
	MftBitmapReads                     int
	MftBitmapReadBytes                 int
	MftBitmapWrites                    int
	MftBitmapWriteBytes                int
	MftBitmapWritesFlushForLogFileFull int
	MftBitmapWritesLazyWriter          int
	MftBitmapWritesUserRequest         int
	MftBitmapWritesUserLevel           int
	UserIndexReads                     int
	UserIndexReadBytes                 int
	UserIndexWrites                    int
	UserIndexWriteBytes                int
	LogFileReads                       int
	LogFileReadBytes                   int
	LogFileWrites                      int
	LogFileWriteBytes                  int
	Allocate                           int
	DiskResourcesExhausted             int
}

type FILESYSTEM_STATISTICS_EX struct {
	FileSystemType          int
	Version                 int
	SizeOfCompleteStructure int
	UserFileReads           int
	UserFileReadBytes       int
	UserDiskReads           int
	UserFileWrites          int
	UserFileWriteBytes      int
	UserDiskWrites          int
	MetaDataReads           int
	MetaDataReadBytes       int
	MetaDataDiskReads       int
	MetaDataWrites          int
	MetaDataWriteBytes      int
	MetaDataDiskWrites      int
}

type NTFS_STATISTICS_EX struct {
	LogFileFullExceptions                                               int
	OtherExceptions                                                     int
	MftReads                                                            int
	MftReadBytes                                                        int
	MftWrites                                                           int
	MftWriteBytes                                                       int
	MftWritesUserLevel                                                  int
	MftWritesFlushForLogFileFull                                        int
	MftWritesLazyWriter                                                 int
	MftWritesUserRequest                                                int
	Mft2Writes                                                          int
	Mft2WriteBytes                                                      int
	Mft2WritesUserLevel                                                 int
	Mft2WritesFlushForLogFileFull                                       int
	Mft2WritesLazyWriter                                                int
	Mft2WritesUserRequest                                               int
	RootIndexReads                                                      int
	RootIndexReadBytes                                                  int
	RootIndexWrites                                                     int
	RootIndexWriteBytes                                                 int
	BitmapReads                                                         int
	BitmapReadBytes                                                     int
	BitmapWrites                                                        int
	BitmapWriteBytes                                                    int
	BitmapWritesFlushForLogFileFull                                     int
	BitmapWritesLazyWriter                                              int
	BitmapWritesUserRequest                                             int
	BitmapWritesUserLevel                                               int
	MftBitmapReads                                                      int
	MftBitmapReadBytes                                                  int
	MftBitmapWrites                                                     int
	MftBitmapWriteBytes                                                 int
	MftBitmapWritesFlushForLogFileFull                                  int
	MftBitmapWritesLazyWriter                                           int
	MftBitmapWritesUserRequest                                          int
	MftBitmapWritesUserLevel                                            int
	UserIndexReads                                                      int
	UserIndexReadBytes                                                  int
	UserIndexWrites                                                     int
	UserIndexWriteBytes                                                 int
	LogFileReads                                                        int
	LogFileReadBytes                                                    int
	LogFileWrites                                                       int
	LogFileWriteBytes                                                   int
	Allocate                                                            int
	DiskResourcesExhausted                                              int
	VolumeTrimCount                                                     int
	VolumeTrimTime                                                      int
	VolumeTrimByteCount                                                 int
	FileLevelTrimCount                                                  int
	FileLevelTrimTime                                                   int
	FileLevelTrimByteCount                                              int
	VolumeTrimSkippedCount                                              int
	VolumeTrimSkippedByteCount                                          int
	NtfsFillStatInfoFromMftRecordCalledCount                            int
	NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount      int
	NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount int
}

type FILE_OBJECTID_BUFFER struct {
	ObjectId  int
	Anonymous int
}

type FILE_SET_SPARSE_BUFFER struct {
	SetSparse int
}

type FILE_ZERO_DATA_INFORMATION struct {
	FileOffset      int
	BeyondFinalZero int
}

type FILE_ALLOCATED_RANGE_BUFFER struct {
	FileOffset int
	Length     int
}

type PLEX_READ_DATA_REQUEST struct {
	ByteOffset int
	ByteLength int
	PlexNumber int
}

type FILE_MAKE_COMPATIBLE_BUFFER struct {
	CloseDisc int
}

type FILE_SET_DEFECT_MGMT_BUFFER struct {
	Disable int
}

type FILE_QUERY_SPARING_BUFFER struct {
	SparingUnitBytes int
	SoftwareSparing  int
	TotalSpareBlocks int
	FreeSpareBlocks  int
}

type FILE_QUERY_ON_DISK_VOL_INFO_BUFFER struct {
	DirectoryCount                  int
	FileCount                       int
	FsFormatMajVersion              int
	FsFormatMinVersion              int
	FsFormatName                    int
	FormatTime                      int
	LastUpdateTime                  int
	CopyrightInfo                   int
	AbstractInfo                    int
	FormattingImplementationInfo    int
	LastModifyingImplementationInfo int
}

type SHRINK_VOLUME_INFORMATION struct {
	ShrinkRequestType  int
	Flags              int
	NewNumberOfSectors int
}

type TXFS_MODIFY_RM struct {
	Flags                   int
	LogContainerCountMax    int
	LogContainerCountMin    int
	LogContainerCount       int
	LogGrowthIncrement      int
	LogAutoShrinkPercentage int
	Reserved                int
	LoggingMode             int
}

type TXFS_QUERY_RM_INFORMATION struct {
	BytesRequired           int
	TailLsn                 int
	CurrentLsn              int
	ArchiveTailLsn          int
	LogContainerSize        int
	HighestVirtualClock     int
	LogContainerCount       int
	LogContainerCountMax    int
	LogContainerCountMin    int
	LogGrowthIncrement      int
	LogAutoShrinkPercentage int
	Flags                   int
	LoggingMode             int
	Reserved                int
	RmState                 int
	LogCapacity             int
	LogFree                 int
	TopsSize                int
	TopsUsed                int
	TransactionCount        int
	OnePCCount              int
	TwoPCCount              int
	NumberLogFileFull       int
	OldestTransactionAge    int
	RMName                  int
	TmLogPathOffset         int
}

type TXFS_GET_METADATA_INFO_OUT struct {
	TxfFileId          int
	LockingTransaction int
	LastLsn            int
	TransactionState   int
}

type TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY struct {
	Offset    int
	NameFlags int
	FileId    int
	Reserved1 int
	Reserved2 int
	Reserved3 int
	FileName  int
}

type TXFS_LIST_TRANSACTION_LOCKED_FILES struct {
	KtmTransaction     int
	NumberOfFiles      int
	BufferSizeRequired int
	Offset             int
}

type TXFS_LIST_TRANSACTIONS_ENTRY struct {
	TransactionId    int
	TransactionState int
	Reserved1        int
	Reserved2        int
	Reserved3        int
}

type TXFS_LIST_TRANSACTIONS struct {
	NumberOfTransactions int
	BufferSizeRequired   int
}

type TXFS_READ_BACKUP_INFORMATION_OUT struct {
	Anonymous int
}

type TXFS_WRITE_BACKUP_INFORMATION struct {
	Buffer int
}

type TXFS_GET_TRANSACTED_VERSION struct {
	ThisBaseVersion   int
	LatestVersion     int
	ThisMiniVersion   int
	FirstMiniVersion  int
	LatestMiniVersion int
}

type TXFS_SAVEPOINT_INFORMATION struct {
	KtmTransaction int
	ActionCode     int
	SavepointId    int
}

type TXFS_CREATE_MINIVERSION_INFO struct {
	StructureVersion int
	StructureLength  int
	BaseVersion      int
	MiniVersion      int
}

type TXFS_TRANSACTION_ACTIVE_INFO struct {
	TransactionsActiveAtSnapshot int
}

type BOOT_AREA_INFO struct {
	BootSectorCount int
	BootSectors     int
}

type RETRIEVAL_POINTER_BASE struct {
	FileAreaOffset int
}

type FILE_SYSTEM_RECOGNITION_INFORMATION struct {
	FileSystem int
}

type REQUEST_OPLOCK_INPUT_BUFFER struct {
	StructureVersion     int
	StructureLength      int
	RequestedOplockLevel int
	Flags                int
}

type REQUEST_OPLOCK_OUTPUT_BUFFER struct {
	StructureVersion    int
	StructureLength     int
	OriginalOplockLevel int
	NewOplockLevel      int
	Flags               int
	AccessMode          int
	ShareMode           int
}

type LOOKUP_STREAM_FROM_CLUSTER_INPUT struct {
	Flags            int
	NumberOfClusters int
	Cluster          int
}

type LOOKUP_STREAM_FROM_CLUSTER_OUTPUT struct {
	Offset             int
	NumberOfMatches    int
	BufferSizeRequired int
}

type LOOKUP_STREAM_FROM_CLUSTER_ENTRY struct {
	OffsetToNext int
	Flags        int
	Reserved     int
	Cluster      int
	FileName     int
}

type CSV_NAMESPACE_INFO struct {
	Version        int
	DeviceNumber   int
	StartingOffset int
	SectorSize     int
}

type CSV_CONTROL_PARAM struct {
	Operation int
	Unused    int
}

type CSV_QUERY_REDIRECT_STATE struct {
	MdsNodeId      int
	DsNodeId       int
	FileRedirected int
}

type CSV_QUERY_FILE_REVISION struct {
	FileId       int
	FileRevision int
}

type CSV_QUERY_MDS_PATH struct {
	MdsNodeId  int
	DsNodeId   int
	PathLength int
	Path       int
}

type CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT struct {
	VetoedFromAltitudeIntegral int
	VetoedFromAltitudeDecimal  int
	Reason                     int
}

type CSV_IS_OWNED_BY_CSVFS struct {
	OwnedByCSVFS int
}

type FILE_LEVEL_TRIM_RANGE struct {
	Offset int
	Length int
}

type FILE_LEVEL_TRIM struct {
	Key       int
	NumRanges int
	Ranges    int
}

type FILE_LEVEL_TRIM_OUTPUT struct {
	NumRangesProcessed int
}

type FSCTL_GET_INTEGRITY_INFORMATION_BUFFER struct {
	ChecksumAlgorithm        int
	Reserved                 int
	Flags                    int
	ChecksumChunkSizeInBytes int
	ClusterSizeInBytes       int
}

type FSCTL_SET_INTEGRITY_INFORMATION_BUFFER struct {
	ChecksumAlgorithm int
	Reserved          int
	Flags             int
}

type REPAIR_COPIES_INPUT struct {
	Size                 int
	Flags                int
	FileOffset           int
	Length               int
	SourceCopy           int
	NumberOfRepairCopies int
	RepairCopies         int
}

type REPAIR_COPIES_OUTPUT struct {
	Size             int
	Status           int
	ResumeFileOffset int
}

type FILE_STORAGE_TIER struct {
	Id                  int
	Name                int
	Description         int
	Flags               int
	ProvisionedCapacity int
	MediaType           int
	Class               int
}

type FSCTL_QUERY_STORAGE_CLASSES_OUTPUT struct {
	Version               int
	Size                  int
	Flags                 int
	TotalNumberOfTiers    int
	NumberOfTiersReturned int
	Tiers                 int
}

type FSCTL_QUERY_REGION_INFO_INPUT struct {
	Version         int
	Size            int
	Flags           int
	NumberOfTierIds int
	TierIds         int
}

type FILE_STORAGE_TIER_REGION struct {
	TierId int
	Offset int
	Length int
}

type FSCTL_QUERY_REGION_INFO_OUTPUT struct {
	Version                 int
	Size                    int
	Flags                   int
	Reserved                int
	Alignment               int
	TotalNumberOfRegions    int
	NumberOfRegionsReturned int
	Regions                 int
}

type DUPLICATE_EXTENTS_DATA struct {
	FileHandle       int
	SourceFileOffset int
	TargetFileOffset int
	ByteCount        int
}

type DISK_EXTENT struct {
	DiskNumber     int
	StartingOffset int
	ExtentLength   int
}

type VOLUME_DISK_EXTENTS struct {
	NumberOfDiskExtents int
	Extents             int
}

type VOLUME_GET_GPT_ATTRIBUTES_INFORMATION struct {
	GptAttributes int
}

type OFSTRUCT struct {
	CBYTES     int
	FFIXEDDISK int
	NERRCODE   int
	Reserved1  int
	Reserved2  int
	SZPATHNAME int
}

type COPYFILE2_MESSAGE struct {
	Type      int
	DWPADDING int
	Info      int
}

type COPYFILE2_EXTENDED_PARAMETERS struct {
	DWSIZE            int
	DWCOPYFLAGS       int
	PFCANCEL          int
	PPROGRESSROUTINE  int
	PVCALLBACKCONTEXT int
}

type FILE_BASIC_INFO struct {
	CreationTime   int
	LastAccessTime int
	LastWriteTime  int
	ChangeTime     int
	FileAttributes int
}

type FILE_STANDARD_INFO struct {
	AllocationSize int
	EndOfFile      int
	NumberOfLinks  int
	DeletePending  int
	Directory      int
}

type FILE_NAME_INFO struct {
	FileNameLength int
	FileName       int
}

type FILE_RENAME_INFO struct {
	Anonymous      int
	RootDirectory  int
	FileNameLength int
	FileName       int
}

type FILE_ALLOCATION_INFO struct {
	AllocationSize int
}

type FILE_END_OF_FILE_INFO struct {
	EndOfFile int
}

type FILE_STREAM_INFO struct {
	NextEntryOffset      int
	StreamNameLength     int
	StreamSize           int
	StreamAllocationSize int
	StreamName           int
}

type FILE_COMPRESSION_INFO struct {
	CompressedFileSize   int
	CompressionFormat    int
	CompressionUnitShift int
	ChunkShift           int
	ClusterShift         int
	Reserved             int
}

type FILE_ATTRIBUTE_TAG_INFO struct {
	FileAttributes int
	ReparseTag     int
}

type FILE_DISPOSITION_INFO struct {
	DeleteFileA int
}

type FILE_ID_BOTH_DIR_INFO struct {
	NextEntryOffset int
	FileIndex       int
	CreationTime    int
	LastAccessTime  int
	LastWriteTime   int
	ChangeTime      int
	EndOfFile       int
	AllocationSize  int
	FileAttributes  int
	FileNameLength  int
	EaSize          int
	ShortNameLength int
	ShortName       int
	FileId          int
	FileName        int
}

type FILE_FULL_DIR_INFO struct {
	NextEntryOffset int
	FileIndex       int
	CreationTime    int
	LastAccessTime  int
	LastWriteTime   int
	ChangeTime      int
	EndOfFile       int
	AllocationSize  int
	FileAttributes  int
	FileNameLength  int
	EaSize          int
	FileName        int
}

type FILE_IO_PRIORITY_HINT_INFO struct {
	PriorityHint int
}

type FILE_ALIGNMENT_INFO struct {
	AlignmentRequirement int
}

type FILE_STORAGE_INFO struct {
	LogicalBytesPerSector                                 int
	PhysicalBytesPerSectorForAtomicity                    int
	PhysicalBytesPerSectorForPerformance                  int
	FileSystemEffectivePhysicalBytesPerSectorForAtomicity int
	Flags                                                 int
	ByteOffsetForSectorAlignment                          int
	ByteOffsetForPartitionAlignment                       int
}

type FILE_ID_INFO struct {
	VolumeSerialNumber int
	FileId             int
}

type FILE_ID_EXTD_DIR_INFO struct {
	NextEntryOffset int
	FileIndex       int
	CreationTime    int
	LastAccessTime  int
	LastWriteTime   int
	ChangeTime      int
	EndOfFile       int
	AllocationSize  int
	FileAttributes  int
	FileNameLength  int
	EaSize          int
	ReparsePointTag int
	FileId          int
	FileName        int
}

type FILE_REMOTE_PROTOCOL_INFO struct {
	StructureVersion     int
	StructureSize        int
	Protocol             int
	ProtocolMajorVersion int
	ProtocolMinorVersion int
	ProtocolRevision     int
	Reserved             int
	Flags                int
	GenericReserved      int
	ProtocolSpecific     int
}

type FILE_ID_DESCRIPTOR struct {
	DWSIZE    int
	Type      int
	Anonymous int
}
