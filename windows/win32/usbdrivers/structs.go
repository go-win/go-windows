// AUTOGENERATED - DO NOT EDIT
// Generated by go-windows.

// Package usbdrivers implements the Windows.Win32.UsbDrivers namespace.
package usbdrivers

type BM_REQUEST_TYPE struct {
	S int
	B int
}

type USB_DEFAULT_PIPE_SETUP_PACKET struct {
	BMREQUESTTYPE int
	BREQUEST      int
	WVALUE        int
	WINDEX        int
	WLENGTH       int
}

type USB_DEVICE_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_INTERFACE_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_ENDPOINT_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_COMMON_DESCRIPTOR struct {
	BLENGTH         int
	BDESCRIPTORTYPE int
}

type USB_DEVICE_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BCDUSB             int
	BDEVICECLASS       int
	BDEVICESUBCLASS    int
	BDEVICEPROTOCOL    int
	BMAXPACKETSIZE0    int
	IDVENDOR           int
	IDPRODUCT          int
	BCDDEVICE          int
	IMANUFACTURER      int
	IPRODUCT           int
	ISERIALNUMBER      int
	BNUMCONFIGURATIONS int
}

type USB_DEVICE_QUALIFIER_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BCDUSB             int
	BDEVICECLASS       int
	BDEVICESUBCLASS    int
	BDEVICEPROTOCOL    int
	BMAXPACKETSIZE0    int
	BNUMCONFIGURATIONS int
	BRESERVED          int
}

type USB_BOS_DESCRIPTOR struct {
	BLENGTH         int
	BDESCRIPTORTYPE int
	WTOTALLENGTH    int
	BNUMDEVICECAPS  int
}

type USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BDEVCAPABILITYTYPE int
	BMATTRIBUTES       int
}

type USB_DEVICE_CAPABILITY_POWER_DELIVERY_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BDEVCAPABILITYTYPE int
	BRESERVED          int
	BMATTRIBUTES       int
	BMPROVIDERPORTS    int
	BMCONSUMERPORTS    int
	BCDBCVERSION       int
	BCDPDVERSION       int
	BCDUSBTYPECVERSION int
}

type USB_DEVICE_CAPABILITY_PD_CONSUMER_PORT_DESCRIPTOR struct {
	BLENGTH             int
	BDESCRIPTORTYPE     int
	BDEVCAPABILITYTYPE  int
	BRESERVED           int
	BMCAPABILITIES      int
	WMINVOLTAGE         int
	WMAXVOLTAGE         int
	WRESERVED           int
	DWMAXOPERATINGPOWER int
	DWMAXPEAKPOWER      int
	DWMAXPEAKPOWERTIME  int
}

type USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR struct {
	BLENGTH               int
	BDESCRIPTORTYPE       int
	BDEVCAPABILITYTYPE    int
	BMATTRIBUTES          int
	WSPEEDSSUPPORTED      int
	BFUNCTIONALITYSUPPORT int
	BU1DEVEXITLAT         int
	WU2DEVEXITLAT         int
}

type USB_DEVICE_CAPABILITY_SUPERSPEEDPLUS_SPEED struct {
	AsUlong32 int
	Anonymous int
}

type USB_DEVICE_CAPABILITY_SUPERSPEEDPLUS_USB_DESCRIPTOR struct {
	BLENGTH               int
	BDESCRIPTORTYPE       int
	BDEVCAPABILITYTYPE    int
	BRESERVED             int
	BMATTRIBUTES          int
	WFUNCTIONALITYSUPPORT int
	WRESERVED             int
	BMSUBLINKSPEEDATTR    int
}

type USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BDEVCAPABILITYTYPE int
	BRESERVED          int
	ContainerID        int
}

type USB_DEVICE_CAPABILITY_PLATFORM_DESCRIPTOR struct {
	BLENGTH                int
	BDESCRIPTORTYPE        int
	BDEVCAPABILITYTYPE     int
	BRESERVED              int
	PlatformCapabilityUuid int
	CapabililityData       int
}

type USB_DEVICE_CAPABILITY_BILLBOARD_DESCRIPTOR struct {
	BLENGTH                 int
	BDESCRIPTORTYPE         int
	BDEVCAPABILITYTYPE      int
	IADDTIONALINFOURL       int
	BNUMBEROFALTERNATEMODES int
	BPREFERREDALTERNATEMODE int
	VconnPower              int
	BMCONFIGURED            int
	BRESERVED               int
	AlternateMode           int
}

type USB_DEVICE_CAPABILITY_FIRMWARE_STATUS_DESCRIPTOR struct {
	BLENGTH              int
	BDESCRIPTORTYPE      int
	BDEVCAPABILITYTYPE   int
	BCDDESCRIPTORVERSION int
	BMATTRIBUTES         int
}

type USB_DEVICE_CAPABILITY_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BDEVCAPABILITYTYPE int
}

type USB_CONFIGURATION_DESCRIPTOR struct {
	BLENGTH             int
	BDESCRIPTORTYPE     int
	WTOTALLENGTH        int
	BNUMINTERFACES      int
	BCONFIGURATIONVALUE int
	ICONFIGURATION      int
	BMATTRIBUTES        int
	MaxPower            int
}

type USB_INTERFACE_ASSOCIATION_DESCRIPTOR struct {
	BLENGTH           int
	BDESCRIPTORTYPE   int
	BFIRSTINTERFACE   int
	BINTERFACECOUNT   int
	BFUNCTIONCLASS    int
	BFUNCTIONSUBCLASS int
	BFUNCTIONPROTOCOL int
	IFUNCTION         int
}

type USB_INTERFACE_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	BINTERFACENUMBER   int
	BALTERNATESETTING  int
	BNUMENDPOINTS      int
	BINTERFACECLASS    int
	BINTERFACESUBCLASS int
	BINTERFACEPROTOCOL int
	IINTERFACE         int
}

type USB_ENDPOINT_DESCRIPTOR struct {
	BLENGTH          int
	BDESCRIPTORTYPE  int
	BENDPOINTADDRESS int
	BMATTRIBUTES     int
	WMAXPACKETSIZE   int
	BINTERVAL        int
}

type USB_HIGH_SPEED_MAXPACKET struct {
	US int
}

type USB_STRING_DESCRIPTOR struct {
	BLENGTH         int
	BDESCRIPTORTYPE int
	BSTRING         int
}

type USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR struct {
	BLENGTH           int
	BDESCRIPTORTYPE   int
	BMAXBURST         int
	BMATTRIBUTES      int
	WBYTESPERINTERVAL int
}

type USB_SUPERSPEEDPLUS_ISOCH_ENDPOINT_COMPANION_DESCRIPTOR struct {
	BLENGTH            int
	BDESCRIPTORTYPE    int
	WRESERVED          int
	DWBYTESPERINTERVAL int
}

type USB_HUB_DESCRIPTOR struct {
	BDESCRIPTORLENGTH   int
	BDESCRIPTORTYPE     int
	BNUMBEROFPORTS      int
	WHUBCHARACTERISTICS int
	BPOWERONTOPOWERGOOD int
	BHUBCONTROLCURRENT  int
	BREMOVEANDPOWERMASK int
}

type USB_30_HUB_DESCRIPTOR struct {
	BLENGTH             int
	BDESCRIPTORTYPE     int
	BNUMBEROFPORTS      int
	WHUBCHARACTERISTICS int
	BPOWERONTOPOWERGOOD int
	BHUBCONTROLCURRENT  int
	BHUBHDRDECLAT       int
	WHUBDELAY           int
	DeviceRemovable     int
}

type USB_HUB_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_HUB_CHANGE struct {
	AsUshort16 int
	Anonymous  int
}

type USB_HUB_STATUS_AND_CHANGE struct {
	AsUlong32 int
	Anonymous int
}

type USB_20_PORT_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_20_PORT_CHANGE struct {
	AsUshort16 int
	Anonymous  int
}

type USB_30_PORT_STATUS struct {
	AsUshort16 int
	Anonymous  int
}

type USB_30_PORT_CHANGE struct {
	AsUshort16 int
	Anonymous  int
}

type USB_PORT_STATUS struct {
	AsUshort16      int
	Usb20PortStatus int
	Usb30PortStatus int
}

type USB_PORT_CHANGE struct {
	AsUshort16      int
	Usb20PortChange int
	Usb30PortChange int
}

type USB_PORT_EXT_STATUS struct {
	AsUlong32 int
	Anonymous int
}

type USB_PORT_STATUS_AND_CHANGE struct {
	AsUlong32 int
	Anonymous int
}

type USB_PORT_EXT_STATUS_AND_CHANGE struct {
	AsUlong64 int
	Anonymous int
}

type USB_HUB_30_PORT_REMOTE_WAKE_MASK struct {
	AsUchar8  int
	Anonymous int
}

type USB_FUNCTION_SUSPEND_OPTIONS struct {
	AsUchar   int
	Anonymous int
}

type USB_CONFIGURATION_POWER_DESCRIPTOR struct {
	BLENGTH              int
	BDESCRIPTORTYPE      int
	SelfPowerConsumedD0  int
	BPOWERSUMMARYID      int
	BBUSPOWERSAVINGD1    int
	BSELFPOWERSAVINGD1   int
	BBUSPOWERSAVINGD2    int
	BSELFPOWERSAVINGD2   int
	BBUSPOWERSAVINGD3    int
	BSELFPOWERSAVINGD3   int
	TransitionTimeFromD1 int
	TransitionTimeFromD2 int
	TransitionTimeFromD3 int
}

type USB_INTERFACE_POWER_DESCRIPTOR struct {
	BLENGTH              int
	BDESCRIPTORTYPE      int
	BMCAPABILITIESFLAGS  int
	BBUSPOWERSAVINGD1    int
	BSELFPOWERSAVINGD1   int
	BBUSPOWERSAVINGD2    int
	BSELFPOWERSAVINGD2   int
	BBUSPOWERSAVINGD3    int
	BSELFPOWERSAVINGD3   int
	TransitionTimeFromD1 int
	TransitionTimeFromD2 int
	TransitionTimeFromD3 int
}

type USBD_VERSION_INFORMATION struct {
	USBDI_Version         int
	Supported_USB_Version int
}

type USBD_DEVICE_INFORMATION struct {
	OffsetNext       int
	UsbdDeviceHandle int
	DeviceDescriptor int
}

type USBD_PIPE_INFORMATION struct {
	MaximumPacketSize   int
	EndpointAddress     int
	Interval            int
	PipeType            int
	PipeHandle          int
	MaximumTransferSize int
	PipeFlags           int
}

type USBD_ENDPOINT_OFFLOAD_INFORMATION struct {
	Size                        int
	EndpointAddress             int
	ResourceId                  int
	Mode                        int
	BITFIELD1                   int
	BITFIELD2                   int
	TransferSegmentLA           int
	TransferSegmentVA           int
	TransferRingSize            int
	TransferRingInitialCycleBit int
	MessageNumber               int
	EventRingSegmentLA          int
	EventRingSegmentVA          int
	EventRingSize               int
	EventRingInitialCycleBit    int
}

type USBD_INTERFACE_INFORMATION struct {
	Length           int
	InterfaceNumber  int
	AlternateSetting int
	Class            int
	SubClass         int
	Protocol         int
	Reserved         int
	InterfaceHandle  int
	NumberOfPipes    int
	Pipes            int
}

type URB_HCD_AREA struct {
	Reserved8 int
}

type URB_HEADER struct {
	Length           int
	Function         int
	Status           int
	UsbdDeviceHandle int
	UsbdFlags        int
}

type URB_SELECT_INTERFACE struct {
	Hdr                 int
	ConfigurationHandle int
	Interface           int
}

type URB_SELECT_CONFIGURATION struct {
	Hdr                     int
	ConfigurationDescriptor int
	ConfigurationHandle     int
	Interface               int
}

type URB_PIPE_REQUEST struct {
	Hdr        int
	PipeHandle int
	Reserved   int
}

type URB_FRAME_LENGTH_CONTROL struct {
	Hdr int
}

type URB_GET_FRAME_LENGTH struct {
	Hdr         int
	FrameLength int
	FrameNumber int
}

type URB_SET_FRAME_LENGTH struct {
	Hdr              int
	FrameLengthDelta int
}

type URB_GET_CURRENT_FRAME_NUMBER struct {
	Hdr         int
	FrameNumber int
}

type URB_CONTROL_DESCRIPTOR_REQUEST struct {
	Hdr                  int
	Reserved             int
	Reserved0            int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	Reserved1            int
	Index                int
	DescriptorType       int
	LanguageId           int
	Reserved2            int
}

type URB_CONTROL_GET_STATUS_REQUEST struct {
	Hdr                  int
	Reserved             int
	Reserved0            int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	Reserved1            int
	Index                int
	Reserved2            int
}

type URB_CONTROL_FEATURE_REQUEST struct {
	Hdr             int
	Reserved        int
	Reserved2       int
	Reserved3       int
	Reserved4       int
	Reserved5       int
	UrbLink         int
	HCA             int
	Reserved0       int
	FeatureSelector int
	Index           int
	Reserved1       int
}

type URB_CONTROL_VENDOR_OR_CLASS_REQUEST struct {
	Hdr                     int
	Reserved                int
	TransferFlags           int
	TransferBufferLength    int
	TransferBuffer          int
	TransferBufferMDL       int
	UrbLink                 int
	HCA                     int
	RequestTypeReservedBits int
	Request                 int
	Value                   int
	Index                   int
	Reserved1               int
}

type URB_CONTROL_GET_INTERFACE_REQUEST struct {
	Hdr                  int
	Reserved             int
	Reserved0            int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	Reserved1            int
	Interface            int
	Reserved2            int
}

type URB_CONTROL_GET_CONFIGURATION_REQUEST struct {
	Hdr                  int
	Reserved             int
	Reserved0            int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	Reserved1            int
}

type OS_STRING struct {
	BLENGTH         int
	BDESCRIPTORTYPE int
	MicrosoftString int
	BVENDORCODE     int
	Anonymous       int
}

type URB_OS_FEATURE_DESCRIPTOR_REQUEST struct {
	Hdr                       int
	Reserved                  int
	Reserved0                 int
	TransferBufferLength      int
	TransferBuffer            int
	TransferBufferMDL         int
	UrbLink                   int
	HCA                       int
	BITFIELD                  int
	Reserved2                 int
	InterfaceNumber           int
	MS_PageIndex              int
	MS_FeatureDescriptorIndex int
	Reserved3                 int
}

type URB_CONTROL_TRANSFER struct {
	Hdr                  int
	PipeHandle           int
	TransferFlags        int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	SetupPacket          int
}

type URB_CONTROL_TRANSFER_EX struct {
	Hdr                  int
	PipeHandle           int
	TransferFlags        int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	Timeout              int
	HCA                  int
	SetupPacket          int
}

type URB_BULK_OR_INTERRUPT_TRANSFER struct {
	Hdr                  int
	PipeHandle           int
	TransferFlags        int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
}

type USBD_ISO_PACKET_DESCRIPTOR struct {
	Offset int
	Length int
	Status int
}

type URB_ISOCH_TRANSFER struct {
	Hdr                  int
	PipeHandle           int
	TransferFlags        int
	TransferBufferLength int
	TransferBuffer       int
	TransferBufferMDL    int
	UrbLink              int
	HCA                  int
	StartFrame           int
	NumberOfPackets      int
	ErrorCount           int
	IsoPacket            int
}

type USBD_STREAM_INFORMATION struct {
	PipeHandle          int
	StreamID            int
	MaximumTransferSize int
	PipeFlags           int
}

type URB_OPEN_STATIC_STREAMS struct {
	Hdr               int
	PipeHandle        int
	NumberOfStreams   int
	StreamInfoVersion int
	StreamInfoSize    int
	Streams           int
}

type URB_GET_ISOCH_PIPE_TRANSFER_PATH_DELAYS struct {
	Hdr                                      int
	PipeHandle                               int
	MaximumSendPathDelayInMilliSeconds       int
	MaximumCompletionPathDelayInMilliSeconds int
}

type URB struct {
	Anonymous int
}

type USB_IDLE_CALLBACK_INFO struct {
	IdleCallback int
	IdleContext  int
}

type USBUSER_REQUEST_HEADER struct {
	UsbUserRequest      int
	UsbUserStatusCode   int
	RequestBufferLength int
	ActualBufferLength  int
}

type PACKET_PARAMETERS struct {
	DeviceAddress     int
	EndpointAddress   int
	MaximumPacketSize int
	Timeout           int
	Flags             int
	DataLength        int
	HubDeviceAddress  int
	PortTTNumber      int
	ErrorCount        int
	Pad               int
	UsbdStatusCode    int
	Data              int
}

type USBUSER_SEND_ONE_PACKET struct {
	Header           int
	PacketParameters int
}

type RAW_RESET_PORT_PARAMETERS struct {
	PortNumber int
	PortStatus int
}

type USBUSER_RAW_RESET_ROOT_PORT struct {
	Header     int
	Parameters int
}

type RAW_ROOTPORT_FEATURE struct {
	PortNumber  int
	PortFeature int
	PortStatus  int
}

type USBUSER_ROOTPORT_FEATURE_REQUEST struct {
	Header     int
	Parameters int
}

type RAW_ROOTPORT_PARAMETERS struct {
	PortNumber int
	PortStatus int
}

type USBUSER_ROOTPORT_PARAMETERS struct {
	Header     int
	Parameters int
}

type USB_CONTROLLER_INFO_0 struct {
	PciVendorId       int
	PciDeviceId       int
	PciRevision       int
	NumberOfRootPorts int
	ControllerFlavor  int
	HcFeatureFlags    int
}

type USBUSER_CONTROLLER_INFO_0 struct {
	Header int
	Info0  int
}

type USB_UNICODE_NAME struct {
	Length int
	String int
}

type USBUSER_CONTROLLER_UNICODE_NAME struct {
	Header      int
	UnicodeName int
}

type USB_PASS_THRU_PARAMETERS struct {
	FunctionGUID    int
	ParameterLength int
	Parameters      int
}

type USBUSER_PASS_THRU_REQUEST struct {
	Header   int
	PassThru int
}

type USB_POWER_INFO struct {
	SystemState          int
	HcDevicePowerState   int
	HcDeviceWake         int
	HcSystemWake         int
	RhDevicePowerState   int
	RhDeviceWake         int
	RhSystemWake         int
	LastSystemSleepState int
	CanWakeup            int
	IsPowered            int
}

type USBUSER_POWER_INFO_REQUEST struct {
	Header           int
	PowerInformation int
}

type USB_OPEN_RAW_DEVICE_PARAMETERS struct {
	PortStatus   int
	MaxPacketEp0 int
}

type USBUSER_OPEN_RAW_DEVICE struct {
	Header     int
	Parameters int
}

type USB_CLOSE_RAW_DEVICE_PARAMETERS struct {
	XXX int
}

type USBUSER_CLOSE_RAW_DEVICE struct {
	Header     int
	Parameters int
}

type USB_SEND_RAW_COMMAND_PARAMETERS struct {
	Usb_bmRequest     int
	Usb_bRequest      int
	Usb_wVlaue        int
	Usb_wIndex        int
	Usb_wLength       int
	DeviceAddress     int
	MaximumPacketSize int
	Timeout           int
	DataLength        int
	UsbdStatusCode    int
	Data              int
}

type USBUSER_SEND_RAW_COMMAND struct {
	Header     int
	Parameters int
}

type USB_BANDWIDTH_INFO struct {
	DeviceCount           int
	TotalBusBandwidth     int
	Total32secBandwidth   int
	AllocedBulkAndControl int
	AllocedIso            int
	AllocedInterrupt_1ms  int
	AllocedInterrupt_2ms  int
	AllocedInterrupt_4ms  int
	AllocedInterrupt_8ms  int
	AllocedInterrupt_16ms int
	AllocedInterrupt_32ms int
}

type USBUSER_BANDWIDTH_INFO_REQUEST struct {
	Header               int
	BandwidthInformation int
}

type USB_BUS_STATISTICS_0 struct {
	DeviceCount             int
	CurrentSystemTime       int
	CurrentUsbFrame         int
	BulkBytes               int
	IsoBytes                int
	InterruptBytes          int
	ControlDataBytes        int
	PciInterruptCount       int
	HardResetCount          int
	WorkerSignalCount       int
	CommonBufferBytes       int
	WorkerIdleTimeMs        int
	RootHubEnabled          int
	RootHubDevicePowerState int
	Unused                  int
	NameIndex               int
}

type USBUSER_BUS_STATISTICS_0_REQUEST struct {
	Header         int
	BusStatistics0 int
}

type USB_DRIVER_VERSION_PARAMETERS struct {
	DriverTrackingCode    int
	USBDI_Version         int
	USBUSER_Version       int
	CheckedPortDriver     int
	CheckedMiniportDriver int
	USB_Version           int
}

type USBUSER_GET_DRIVER_VERSION struct {
	Header     int
	Parameters int
}

type USB_USB2HW_VERSION_PARAMETERS struct {
	Usb2HwRevision int
}

type USBUSER_GET_USB2HW_VERSION struct {
	Header     int
	Parameters int
}

type USBUSER_REFRESH_HCT_REG struct {
	Header int
	Flags  int
}

type WINUSB_PIPE_INFORMATION struct {
	PipeType          int
	PipeId            int
	MaximumPacketSize int
	Interval          int
}

type WINUSB_PIPE_INFORMATION_EX struct {
	PipeType                int
	PipeId                  int
	MaximumPacketSize       int
	Interval                int
	MaximumBytesPerInterval int
}

type WINUSB_SETUP_PACKET struct {
	RequestType int
	Request     int
	Value       int
	Index       int
	Length      int
}

type USB_START_TRACKING_FOR_TIME_SYNC_INFORMATION struct {
	TimeTrackingHandle      int
	IsStartupDelayTolerable int
}

type USB_STOP_TRACKING_FOR_TIME_SYNC_INFORMATION struct {
	TimeTrackingHandle int
}

type USB_FRAME_NUMBER_AND_QPC_FOR_TIME_SYNC_INFORMATION struct {
	TimeTrackingHandle                              int
	InputFrameNumber                                int
	InputMicroFrameNumber                           int
	QueryPerformanceCounterAtInputFrameOrMicroFrame int
	QueryPerformanceCounterFrequency                int
	PredictedAccuracyInMicroSeconds                 int
	CurrentGenerationID                             int
	CurrentQueryPerformanceCounter                  int
	CurrentHardwareFrameNumber                      int
	CurrentHardwareMicroFrameNumber                 int
	CurrentUSBFrameNumber                           int
}
