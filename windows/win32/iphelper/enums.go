// AUTOGENERATED - DO NOT EDIT
// Generated by go-windows.

// Package iphelper implements the Windows.Win32.IpHelper namespace.
package iphelper

type IF_ACCESS_TYPE int32

const (
	IF_ACCESS_LOOPBACK = 1
	IF_ACCESS_BROADCAST = 2
	IF_ACCESS_POINT_TO_POINT = 3
	IF_ACCESS_POINTTOPOINT = 3
	IF_ACCESS_POINT_TO_MULTI_POINT = 4
	IF_ACCESS_POINTTOMULTIPOINT = 4
)

type INTERNAL_IF_OPER_STATUS int32

const (
	IF_OPER_STATUS_NON_OPERATIONAL = 0
	IF_OPER_STATUS_UNREACHABLE = 1
	IF_OPER_STATUS_DISCONNECTED = 2
	IF_OPER_STATUS_CONNECTING = 3
	IF_OPER_STATUS_CONNECTED = 4
	IF_OPER_STATUS_OPERATIONAL = 5
)

type NET_IF_RCV_ADDRESS_TYPE int32

const (
	NET_IF_RCV_ADDRESS_TYPE_OTHER = 1
	NET_IF_RCV_ADDRESS_TYPE_VOLATILE = 2
	NET_IF_RCV_ADDRESS_TYPE_NON_VOLATILE = 3
)

type IF_ADMINISTRATIVE_STATE int32

const (
	IF_ADMINISTRATIVE_DISABLED = 0
	IF_ADMINISTRATIVE_ENABLED = 1
	IF_ADMINISTRATIVE_DEMANDDIAL = 2
)

type IF_OPER_STATUS int32

const (
	IfOperStatusUp = 1
	IfOperStatusDown = 2
	IfOperStatusTesting = 3
	IfOperStatusUnknown = 4
	IfOperStatusDormant = 5
	IfOperStatusNotPresent = 6
	IfOperStatusLowerLayerDown = 7
)

type MIB_IF_ENTRY_LEVEL int32

const (
	MibIfEntryNormal = 0
	MibIfEntryNormalWithoutStatistics = 2
)

type MIB_IPFORWARD_TYPE int32

const (
	MIB_IPROUTE_TYPE_OTHER = 1
	MIB_IPROUTE_TYPE_INVALID = 2
	MIB_IPROUTE_TYPE_DIRECT = 3
	MIB_IPROUTE_TYPE_INDIRECT = 4
)

type MIB_IPNET_TYPE int32

const (
	MIB_IPNET_TYPE_OTHER = 1
	MIB_IPNET_TYPE_INVALID = 2
	MIB_IPNET_TYPE_DYNAMIC = 3
	MIB_IPNET_TYPE_STATIC = 4
)

type MIB_IPSTATS_FORWARDING int32

const (
	MIB_IP_FORWARDING = 1
	MIB_IP_NOT_FORWARDING = 2
)

type MIB_TCP_STATE int32

const (
	MIB_TCP_STATE_CLOSED = 1
	MIB_TCP_STATE_LISTEN = 2
	MIB_TCP_STATE_SYN_SENT = 3
	MIB_TCP_STATE_SYN_RCVD = 4
	MIB_TCP_STATE_ESTAB = 5
	MIB_TCP_STATE_FIN_WAIT1 = 6
	MIB_TCP_STATE_FIN_WAIT2 = 7
	MIB_TCP_STATE_CLOSE_WAIT = 8
	MIB_TCP_STATE_CLOSING = 9
	MIB_TCP_STATE_LAST_ACK = 10
	MIB_TCP_STATE_TIME_WAIT = 11
	MIB_TCP_STATE_DELETE_TCB = 12
	MIB_TCP_STATE_RESERVED = 100
)

type TCP_RTO_ALGORITHM int32

const (
	TcpRtoAlgorithmOther = 1
	TcpRtoAlgorithmConstant = 2
	TcpRtoAlgorithmRsre = 3
	TcpRtoAlgorithmVanj = 4
	MIB_TCP_RTO_OTHER = 1
	MIB_TCP_RTO_CONSTANT = 2
	MIB_TCP_RTO_RSRE = 3
	MIB_TCP_RTO_VANJ = 4
)

type TCP_TABLE_CLASS int32

const (
	TCP_TABLE_BASIC_LISTENER = 0
	TCP_TABLE_BASIC_CONNECTIONS = 1
	TCP_TABLE_BASIC_ALL = 2
	TCP_TABLE_OWNER_PID_LISTENER = 3
	TCP_TABLE_OWNER_PID_CONNECTIONS = 4
	TCP_TABLE_OWNER_PID_ALL = 5
	TCP_TABLE_OWNER_MODULE_LISTENER = 6
	TCP_TABLE_OWNER_MODULE_CONNECTIONS = 7
	TCP_TABLE_OWNER_MODULE_ALL = 8
)

type UDP_TABLE_CLASS int32

const (
	UDP_TABLE_BASIC = 0
	UDP_TABLE_OWNER_PID = 1
	UDP_TABLE_OWNER_MODULE = 2
)

type TCPIP_OWNER_MODULE_INFO_CLASS int32

const (
	TCPIP_OWNER_MODULE_INFO_BASIC = 0
)

type TCP_ESTATS_TYPE int32

const (
	TcpConnectionEstatsSynOpts = 0
	TcpConnectionEstatsData = 1
	TcpConnectionEstatsSndCong = 2
	TcpConnectionEstatsPath = 3
	TcpConnectionEstatsSendBuff = 4
	TcpConnectionEstatsRec = 5
	TcpConnectionEstatsObsRec = 6
	TcpConnectionEstatsBandwidth = 7
	TcpConnectionEstatsFineRtt = 8
	TcpConnectionEstatsMaximum = 9
)

type TCP_BOOLEAN_OPTIONAL int32

const (
	TcpBoolOptDisabled = 0
	TcpBoolOptEnabled = 1
	TcpBoolOptUnchanged = -1
)

type TCP_SOFT_ERROR int32

const (
	TcpErrorNone = 0
	TcpErrorBelowDataWindow = 1
	TcpErrorAboveDataWindow = 2
	TcpErrorBelowAckWindow = 3
	TcpErrorAboveAckWindow = 4
	TcpErrorBelowTsWindow = 5
	TcpErrorAboveTsWindow = 6
	TcpErrorDataChecksumError = 7
	TcpErrorDataLengthError = 8
	TcpErrorMaxSoftError = 9
)

type NET_ADDRESS_FORMAT int32

const (
	NET_ADDRESS_FORMAT_UNSPECIFIED = 0
	NET_ADDRESS_DNS_NAME = 1
	NET_ADDRESS_IPV4 = 2
	NET_ADDRESS_IPV6 = 3
)

type SCOPE_LEVEL int32

const (
	ScopeLevelInterface = 1
	ScopeLevelLink = 2
	ScopeLevelSubnet = 3
	ScopeLevelAdmin = 4
	ScopeLevelSite = 5
	ScopeLevelOrganization = 8
	ScopeLevelGlobal = 14
	ScopeLevelCount = 16
)

type NL_PREFIX_ORIGIN int32

const (
	IpPrefixOriginOther = 0
	IpPrefixOriginManual = 1
	IpPrefixOriginWellKnown = 2
	IpPrefixOriginDhcp = 3
	IpPrefixOriginRouterAdvertisement = 4
	IpPrefixOriginUnchanged = 16
)

type NL_SUFFIX_ORIGIN int32

const (
	NlsoOther = 0
	NlsoManual = 1
	NlsoWellKnown = 2
	NlsoDhcp = 3
	NlsoLinkLayerAddress = 4
	NlsoRandom = 5
	IpSuffixOriginOther = 0
	IpSuffixOriginManual = 1
	IpSuffixOriginWellKnown = 2
	IpSuffixOriginDhcp = 3
	IpSuffixOriginLinkLayerAddress = 4
	IpSuffixOriginRandom = 5
	IpSuffixOriginUnchanged = 16
)

type NL_DAD_STATE int32

const (
	NldsInvalid = 0
	NldsTentative = 1
	NldsDuplicate = 2
	NldsDeprecated = 3
	NldsPreferred = 4
	IpDadStateInvalid = 0
	IpDadStateTentative = 1
	IpDadStateDuplicate = 2
	IpDadStateDeprecated = 3
	IpDadStatePreferred = 4
)

type NL_NETWORK_CONNECTIVITY_LEVEL_HINT int32

const (
	NetworkConnectivityLevelHintUnknown = 0
	NetworkConnectivityLevelHintNone = 1
	NetworkConnectivityLevelHintLocalAccess = 2
	NetworkConnectivityLevelHintInternetAccess = 3
	NetworkConnectivityLevelHintConstrainedInternetAccess = 4
	NetworkConnectivityLevelHintHidden = 5
)

type NL_NETWORK_CONNECTIVITY_COST_HINT int32

const (
	NetworkConnectivityCostHintUnknown = 0
	NetworkConnectivityCostHintUnrestricted = 1
	NetworkConnectivityCostHintFixed = 2
	NetworkConnectivityCostHintVariable = 3
)

